---
title: Working with Your Computer
date: 2014-09-19
---

In this module, we will learn to:

1. navigate and manipulate your computer using the Terminal 
2. conceptualize your computer as a computing machine connected to other computing machines

### 1. Working with the Terminal

Throughout this tutorial, we will be spending a lot of time in Terminal/PowerShell as our primary way of talking to our computers. In order to do this, however, it is necessary to take some time to get comfortable working with the command line.

So let's walk through some basic commands while setting up our computer for the rest of the tutorial.

First, open Terminal/PowerShell and let's get a sense of where we are in the file structure of our computer. 

Type <span class="command">pwd</span> and press "Enter". 

The command, which stands for "print working directory", tells you which directory you are in. Navigating the computer through the Terminal sometimes feels like tunneling, and <span class='command'>pwd</span> is very helpful for checking where you are at any given time. You should see something like:

	/Users/yourusername

if you're on a Mac or

	C:\Users\username

for Windows.

Type <span class="command">ls</span> and press "Enter". 

This is another helpful command for orienting yourself. This command lists all the files in your current directory. If you need to see hidden files, type <span class="command">ls -a</span> (Mac) or <span class="command">ls -Hidden</span> (Windows). 

You should see something like:

	jeris-mbp:~ jeriwieringa$ ls
	Applications		Dropbox		Music
	Desktop			Envs		Pictures
	Documents		Library		Public
	Downloads		Movies		Sites		

Now that we know where we are, we need to learn how to move around the different folders. This is done with <span class='command'>cd</span> or "change directory". If you just type <span class='command'>cd</span>, you will move back to the root of your user directory. To move forward, type:

	cd [Directory_Name]

and press Enter. 

You can also move multiple directories at a time with:

	cd [Directory_Name/Directory_Name/Directory_Name]

This way you can dig down through your files. Go ahead and give it a try.

Type <span class="command">cd Documents</span> and press Enter. Now type <span class="command">ls</span> and press Enter.

You can also move backwards by typing <span class="command">cd ../</span>. To move back multiple directories, type <span class="command">cd ../../../</span>. 

Go ahead and give that a try. After moving around, work your way back to the "Documents" folder. 

Let's create a folder for our work today. 

Type <span class="command">mkdir dhb_awesome</span> and press Enter. Now type <span class="command">ls</span> and you should see your "dhb_awesome" folder. Use <span class='command'>cd</span> to move into that folder.

Folders are great but it is also helpful to know how to make files. For that, we'll use a command called "touch" on OSX and "New-Item" on Windows.

If you're on a Mac, type:
	
	touch my_first_script.py

and press Enter. 

If you're on Windows, type:

	New-Item -ItemType file my_first_script.py

and press Enter. 

Run <span class="command">ls</span> to see the file you just created. 

To edit your new file in your text-editor, type: 
	
	open my_first_script.py

on your Mac or

	Start notepad++ my_first_script.py

on your Windows machine. 

This should launch your default text editor. (For Mac users, if the file does not open in TextWrangler or your text editor, work with your coach to set your default editor.) 

Type <span class="command">print "Hello World"</span> into the text file and save. We will do something with that soon.

If you want to learn more commands--like how to remove, copy, or rename files--checkout the [Scholars' Lab Command Line Bootcamp](http://praxis.scholarslab.org/scratchpad/bash/). But this is enough to start!


### 2. Terminology and Mapping the Computer

Now we're going to take a step back to think about the different layers of the computer that we will be working with and about how we move data from one process to another. 

We will talk more about moving from the graphical interface to the terminal interface for communicating with our computers. Then we will talk about using APIs (or Application Programming Interfaces) for communicating between computers.


### Credits
This tutorial is based on the [Praxis Program's Command Line Bootcamp](http://praxis.scholarslab.org/scratchpad/bash/) and Greg Bloom's post, <a href="http://sunlightfoundation.com/blog/2014/06/20/opengov-voices-draw-an-api-an-interpretation-of-open-data-by-tcampers/">Draw an API</a>.

<span class="right">[Next Module](module02.html)</span>
