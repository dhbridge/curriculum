---
title: Thinking about Data
date: 2014-09-19
---

For this module, we will be using data from the [Digital Public Library of America](http://dp.la). We will walk through requesting an API key using the terminal, learn how to talk to the api in our browsers, and think about the structure of the data we get back.

### Get an API Key

The DPLA is an incredible resource for computational research. By bringing together information from a growing number of partners and making that information available through an API, the DPLA has made it easy to survey vasts amounts of data housed in various cultural heritage institutions around the country.

Go to [http://dp.la/info/developers/codex/](http://dp.la/info/developers/codex/). This is the documentation for the dp.la api. Remember from our earlier conversation that an API is like a direct link between your browser and a server, where, if you format your request in a particular way, you will get back the data from the server is a particular data format, without the HTML interface.

First, you will need an api key. 

If you are on a Mac, there is a utility built into your system called "cURL". To use cURL to request your key, type:

	curl -v -XPOST http://api.dp.la/v2/api_key/YOUR_EMAIL@example.com

into your terminal, replacing "YOUR_EMAIL@example.com" with your actual email address.

If you are on windows, your utility is called "Invoke-WebRequest". To use Invoke-WebRequest to request your key, type:

	Invoke-WebRequest -Uri ("http://api.dp.la/v2/api_key/YOUR_EMAIL@example.com") -Method POST -Verbose 

again, replacing "YOUR_EMAIL@example.com" with your actual email address.

You should get an email from the DPLA with your key. 

### Use Key to Examine Data in Browser

To get a sense of how the api key works and what the data we get back look like, let's explore in our web-browser. 

In your browser, type:

	http://api.dp.la/v2/items?q=cooking&api_key=[YOURAPIKEY]

The first part of this url ("http://api.dp.la/v2/") is the "base" url. This must go at the beginning of all api requests. Next, we are telling the server that we want to see "items" and we want to see the items that match the keyword "cooking". The "?q=" is the grammer of the api -- this is how we signal to the server that we want to query for the word following the "=". To see additional options for the api, go to [http://dp.la/info/developers/codex/requests/](http://dp.la/info/developers/codex/requests/).

You should see something that looks like:

	{"count":10646,"start":0,"limit":10,"docs":[{"@context":"http://dp.la/api/items/context","isShownAt":"https://digital.lib.ecu.edu/7394","dataProvider":"East Carolina University","@type":"ore:Aggregation","provider":{"@id":"http://dp.la/api/contributor/digitalnc","name":"North Carolina Digital Heritage Center"},"object":"https://digital.lib.ecu.edu/encore/ncgre000/00000008/00007394/00007394_tn_0001.gif","ingestionSequence":14,"id":"7cb32765b538a57a35fbdbfad03be57b","ingestDate":"2014-08-19T10:45:46.393447","_rev":"2-1b21f198053a2727bffece028cd30a6d","aggregatedCHO":"#sourceResource","_id":"digitalnc--urn:brevard.lib.unc.eduecu_c5:oai:digital.lib.ecu.edu/7394"

If you are using Chrome, you can use a very handy extension called [JSONView](https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc), which will make the output display like:

	{
	count: 10646,
	start: 0,
	limit: 10,
	docs: [
		{
		@context: "http://dp.la/api/items/context",
		isShownAt: "https://digital.lib.ecu.edu/7394",
		dataProvider: "East Carolina University",
		@type: "ore:Aggregation",
		provider: {
			@id: "http://dp.la/api/contributor/digitalnc",
			name: "North Carolina Digital Heritage Center"
		},

Well done! You have just made a successful API request.

### Thinking about JSON

What you are looking at is a JSON document. In a JSON object, all the information is given in "key : value" pairs. On the left-hand side is the "key". This is a standardized description of a bit of information, such as "provider" or "ingestData". On right-hand side is the "value", or the information that applies for a particular object. With your table, work through the document and try to answer the following questions:

1. How many objects are displayed here? How do you know?
2. How many ojects in the DPLA database fit our query for cooking? 
3. Which key:value pairs do you find the most interested?
4. What types of questions can you ask of this dataset? Which key:value pairs would be most helpful for answering those questions?
5. What questions would be hard to answer with this dataset? What additional information would you need?

### What You Have Learned

In this module, you've learned:

- to use cURL or Invoke-WebRequest to talk to a server
- to use an API to request data
- to read JSON documents and think about how data is structured


